---
layout: post
title: Synchronization - Semaphore
date: 2019-06-30 15:01:00
description: How to share resources without crash?
---

서로 다른 프로세스가 한정된 자원을 동시에 사용하려할 때 문제가 발생할 수 있다.
어떻게 하면 이러한 문제를 해결할 수 있을까?
누군가 자원을 사용하면 이벤트나 인터럽트가 발생하여 사용 불가능의 상태가 되고,
사용 완료하면 사용 가능한 상태로 되돌려 놓으면 되지 않을까?

이런 방식을 구체화 한 것이 바로...

**"Semaphore"**

> The semaphore concept was invented by Dutch computer scientist Edsger Dijkstra. (from Wikipedia)

자원을 효과적으로 공유하기 위해 만든 개념이다.
프로세스에서 특정 자원을 사용하고자 할 때 Semaphore를 통해 자원을 사용할 수 있는 권리를 얻을 수 있으며,
만일 해당 자원이 모두 사용 중일 경우 자원이 사용가능 할 때까지 대기하여야 한다.
(유명한 예제로 Dining Philosophers Problem 이 있다.)

___

**"Mutex" (Mutual Exclusion)**

자원이 하나만 존재할때는 Mutual Exclusion (Mutex) 라는 방법이 존재한다.
Mutex를 이용하면 작업을 하고 있는 프로세스가 해당 자원의 우선권을 갖게 되고 바로 그 프로세스가 우선권을 놓지 않으면 다른 프로세스는 접속할 수 없다. Mutex가 아닐 경우 사용 권리를 갖고 있지 않은 프로세스가 사용 권리를 해제 할 수 있어, 문제 발생의 가능성이 있다.

예를 들면, A 프로세스가 먼저 X라는 자원을 사용하면서 상태를 "사용중"으로 변경해 놓았는데
B 프로세스가 자원 X의 상태를 "사용중" 에서 "사용가능" 으로 변경 할 수 있다는 말이다.
참고로 이 차이가 Binary Semaphore와의 차이다.

개인적으로 Mutex 사용시 ++CPU Lock++ 을 사용하는 것을 권장한다.
만일 자원사용 도중 해당 프로세스가 우선순위가 높은 프로세스의 인터럽트를 받아 Pending 상태가 될 경우
어떠한 문제가 발생할 지 모르기 때문이다. (실제 문제가 발생하여 몇일 고생한 적이 있다...)

___
아래는 이해를 돕기위한 예시이다.

Semaphore 개념의 예로서 Niclas Winquist의 화장실 비유를 인용하자면,

화장실을 사용할 때 어떻게 사용해야 문제가 없을 것인가? 의 문제에 대해
우선 하나의 화장실만 있을 경우 사용하는 사람에게 열쇠를 준다.
사용하는 사람은 안에서 잠그고, 사용 후에는 자물쇠를 풀고 다음사람에게 열쇠를 주면 문제없이 사용할 수 있을 것이다.
여기서 열쇠를 Mutex라고 생각하면 된다.

만일 화장실 칸이 여러개 있다면?
예를들어 4개라고 하면, 열쇠가 4개이면 된다. 대신 모든 열쇠는 모든 화장실 칸을 열 수 있어야 하고 모든 열쇠는 키가 같다.
이때의 열쇠는 Semaphore라고 보면 된다.
